/*
 * motor.h
 *
 *  Created on: Apr 29, 2024
 *      Author: natha
 */

#ifndef INC_MOTOR_H_
#define INC_MOTOR_H_

#include "stm32l4xx_hal.h"
#include <stdint.h>

// Motor object data structure
struct {
	volatile uint32_t* chA; // Use a pointer to proper CCR for first timer channel
	volatile uint32_t* chB; // Use a pointer to proper CCR for second timer channel
	int32_t Period; // Auto reload value to properly set duty cycle percentage
	int32_t Duty; //initial duty cycle
} typedef motor_t;

// Function prototypes for motor control
void set_duty(motor_t* p_mot, int32_t level);
void enable_chA(motor_t* p_mot, int32_t level);
void enable_chB(motor_t* p_mot, int32_t level);
void disable_chA(motor_t* p_mot);
void disable_chB(motor_t* p_mot);
void set_duty_chA(motor_t* p_mot, int32_t level);
void set_duty_chB(motor_t* p_mot, int32_t level);


#endif /* INC_MOTOR_H_ */
